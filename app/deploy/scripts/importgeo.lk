file = choose_file( workdir(), "Import a .geo file", "GEO Files (*.geo)");

if (file == "")
    exit;

if ( !yesno("This will clear all stages. Continue?"))
    exit;

fp = open(file, "r");
if (!fp) {
    notice("Could not open geometry file.");
    exit;
}

clearstages();

line = "";

read_line( fp, line );
nstages = to_int( mid(line, 19) );
outln("Reading " + nstages + " stages...");

apersurf = define( s )
{
    if (#s < 1)
        return ["z",999,999];
    
    params = real_array( mid(s,2) );
    v[0] = lower( ch(s,0) );
    for (i=0;i<#params && i<8;i++)
        v[i+1] = to_real(params[i]);
    for (;i<8;i++)
        v[i+1] = 0.0;
    return v;        
};

for (istage=0;istage<nstages;istage++)
{
    stagename = "Stage " + to_string(istage+1);
    addstage( stagename );
    
    read_line(fp, line); // skip empty line
    read_line(fp, line); // optical or virtual or name
    
    stage.virtual = false;
    stage.tracethrough = false;
    stage.multihit = false;
    
    if (strpos(line, "Optical") < 0)
        stage.virtual = true;
    
    read_line(fp, line); // origin coords
    read_line(fp, line); // x y z
    arr = real_array(line);
    stage.x = arr[0];
    stage.y = arr[1];
    stage.z = arr[2];
    
    read_line(fp, line); // aimpoint, zrot
    read_line(fp, line); // ax ay az zrot
    arr = real_array(line);
    stage.ax = arr[0];
    stage.ay = arr[1];
    stage.az = arr[2];
    stage.zrot = arr[3];
    
    stageopt( stagename, stage );
    
    read_line(fp, line); // number of elements
    read_line(fp, line);
    
    numelm = to_int(line);
    
    outln("Stage " + istage + " elements=" + numelm + ":" + stage );
    read_line(fp, line); // column names
        
    for (i=0;i<numelm;i++)
    {
        read_line(fp, line);
        data = split(line, " \t");
        
        elm.en = true;
        elm.x = to_real(data[1]);
        elm.y = to_real(data[2]);
        elm.z = to_real(data[3]);
        elm.ax = to_real(data[4]);
        elm.ay = to_real(data[5]);
        elm.az = to_real(data[6]);
        elm.aper = apersurf(data[7]);
        elm.zrot = to_real(data[8]);
        elm.surf = apersurf(data[9]);        
        elm.interact = "reflection";
        elm.optic = "";
        if ( stage.virtual == false )
        {
            if ( to_int(data[10]) == 1 )
                elm.interact = "refraction";
            
            elm.optic = data[11];
        }
        
        addelement();
        elementopt(i, elm);
        outln("added element["+to_string(i)+"]: "+ elm);
    }
}

close(fp);

outln("Imported " + nstages + " stages.");
